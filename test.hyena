union() Foo {
    one:u8,
    two:u8,
    three:u16
}

fn main() void {
    var j = Foo { .one = 90 };
    
    switch(j) {
        .one, .two => |*val| {
            test_eql(val.*, 90);
            val.* = 93;
        },
        else => {
            write("else block\n");
        }
    }

    switch(j) {
        .one, .two => |*val| {
            test_eql(val.*, 93);
            val.* = 93;
        },
        else => {
            write("else block\n");
        }
    }

}


fn write(data:&u8) void {
    asm {
        "mov rsi, [rdi+8]"
        "mov rdx, [rdi +0]"
        "mov rdi, 1"
        "mov rax, 1"
        "syscall"
    }
}


fn test(a:bool) void {
    if(a) {
        write("test: ok\n");
    } else {
        write("test: fail\n");
    }
}

fn test_eql(a:bool, b:bool) void {
    if(a == b) {
        write("test: ok\n");
    } else {
        write("test: fail\n");
    }
}